//Input
4 6
0 1 
0 2 
1 2
2 0
2 3
3 4
output
true

//input
4 3
0 1
1 2
2 3
output
false


import java.util.*;
import java.io.*;
public class Main{

  static int white = 0 , gray = 1 , black = 2;

    static boolean isCycleUTIL(ArrayList<ArrayList<Integer>> graph  , int u , int[] color){
        color[u] =  gray;
        
        for(int i : graph.get(u)){

            if(color[i] == gray)
                 return true;

            
            if (color[i] == white && isCycleUTIL(graph , i, color) == true)
                return true;

       }
       color[u] = black;

       return false;
    }

 public static boolean isCycle(ArrayList<ArrayList<Integer>> graph , int n){
        int[] color = new int[n];
        
        for(int i = 0 ; i < n ; i++){
            color[i] = white;
        }

        for(int i = 0 ;i < n ; i++)
{
            if(color[i] == white)
{
                if(isCycleUTIL(graph , i , color) == true ){
                    return true;
                }

            }

        }
        return false;
    }
    public static void main(String[] args) throws Exception {
        
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        
        String[] s = br.readLine().split(" ");
        int vtces = Integer.parseInt(s[0]);
        int edges = Integer.parseInt(s[1]);
        
        ArrayList<ArrayList<Integer>> graph = new ArrayList<>();
        for(int i = 0 ; i < vtces;i++){
            graph.add(new ArrayList<>());
        }
        
        for(int i = 0 ;i < edges ; i++){
            String[] st = br.readLine().split(" ");
            int u = Integer.parseInt(st[0]);
            int v = Integer.parseInt(st[1]);
            graph.get(u).add(v);
        }
        boolean a = isCycle(graph , vtces);
        System.out.println(a);
    }
}
